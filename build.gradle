plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'idea'
	id 'org.asciidoctor.convert' version '1.5.9.2'
}

group = 'com.example.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'

	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.projectlombok:lombok'

	// mapstruct
	implementation "org.mapstruct:mapstruct:1.3.0.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"

	// asciidoc
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.3.RELEASE'

	// hateoas for Rest API
	implementation "org.springframework.boot:spring-boot-starter-hateoas"

	// TODO Spring security

	// https://mvnrepository.com/artifact/org.jasypt/jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.0'

}

test {
	if (!project.hasProperty('encryptionKey')) {
		println 'not found encryptionKey'
	} else {
		println project.getProperty("encryptionKey")
		systemProperty ("encryptionKey", project.getProperty("encryptionKey"))
	}
	useJUnitPlatform()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}